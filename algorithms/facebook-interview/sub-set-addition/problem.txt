Problem: Given a sequence of nonnegative integers A and an integer T,
return whether there is a *continuous sequence* of A that sums up to exactly T

Example:
[23, 5, 4, 7, 2, 11], 20. Return True because 7 + 2 + 11 = 20
[1, 3, 5, 23, 2], 8. Return True because 3 + 5 = 8
[1, 3, 5, 23, 2], 7 Return False because no sequence in this array adds up to 7

We are looking for an O(N) solution.
There is an obvious O(N^2) solution which is a good starting point but is not
the final solution we are looking for.
Itâ€™s important for the code to be as efficient as possible.


-------------- PSUEDO CODE ----------------
- Start with the iterating once through the entire array.
- As we iterate, we calculate a dynamic sum.
  - this sum, sill be the sum of a "current sequence" that is less than the target value.
  - if this sum becomes equal exactly to the target, we've found our solution.
  - if the running sum + the current value, is LESS than the target value,
    we'll 1) SAVE the new sum as the current sum.
  - if the running sum + the current value, is GREATER than the target value,
    we'll reset the count to the current value.

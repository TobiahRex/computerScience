const swap = (array, indexA, indexB) => {
  let temp = array[indexA];
  array[indexA] = array[indexB];
  array[indexB] = temp;
}

const partition = (array, lo, hi) => {
  let iNext = lo,
    iPartition = hi;

  while (true) {
    if (array[iNext] > array[iPartition]) {
      swap(array, iNext, iPartition - 1);
      swap(array, iPartition - 1, iPartition);
      iPartition--;
    } else if (iNext === iPartition) break;
    else iNext++;
  }
  return iPartition;
}

const quickSort = (nums, lo = 0, hi = nums.length - 1) => {
  if (lo > hi || lo === hi) return;

  const p = partition(nums, lo, hi);
  quickSort(nums, lo, p - 1);
  quickSort(nums, p, hi);
}



let nums = [1,
  10,
  12,
  101,
  121,
  123,
  1010,
  1012,
  1210,
  1212,
  1232,
  1234,
  10101,
  10121,
  10123,
  12101,
  12121,
  12123,
  12321,
  12323,
  12343,
  12345,
  2,
  21,
  23,
  210,
  212,
  232,
  234,
  2101,
  2121,
  2123,
  2321,
  2323,
  2343,
  2345,
  21010,
  21012,
  21210,
  21212,
  21232,
  21234,
  23210,
  23212,
  23232,
  23234,
  23432,
  23434,
  23454,
  23456,
  3,
  32,
  34,
  321,
  323,
  343,
  345,
  3210,
  3212,
  3232,
  3234,
  3432,
  3434,
  3454,
  3456,
  32101,
  32121,
  32123,
  32321,
  32323,
  32343,
  32345,
  34321,
  34323,
  34343,
  34345,
  34543,
  34545,
  34565,
  34567,
  4,
  43,
  45,
  432,
  434,
  454,
  456,
  4321,
  4323,
  4343,
  4345,
  4543,
  4545,
  4565,
  4567,
  43210,
  43212,
  43232,
  43234,
  43432,
  43434,
  43454,
  43456,
  45432,
  45434,
  45454,
  45456,
  45654,
  45656,
  45676,
  45678,
  5,
  54,
  56,
  543,
  545,
  565,
  567,
  5432,
  5434,
  5454,
  5456,
  5654,
  5656,
  5676,
  5678,
  54321,
  54323,
  54343,
  54345,
  54543,
  54545,
  54565,
  54567,
  56543,
  56545,
  56565,
  56567,
  56765,
  56767,
  56787,
  56789,
  6,
  65,
  67,
  654,
  656,
  676,
  678,
  6543,
  6545,
  6565,
  6567,
  6765,
  6767,
  6787,
  6789,
  65432,
  65434,
  65454,
  65456,
  65654,
  65656,
  65676,
  65678,
  67654,
  67656,
  67676,
  67678,
  67876,
  67878,
  67898,
  7,
  76,
  78,
  765,
  767,
  787,
  789,
  7654,
  7656,
  7676,
  7678,
  7876,
  7878,
  7898,
  76543,
  76545,
  76565,
  76567,
  76765,
  76767,
  76787,
  76789,
  78765,
  78767,
  78787,
  78789,
  78987,
  78989,
  8,
  87,
  89,
  876,
  878,
  898,
  8765,
  8767,
  8787,
  8789,
  8987,
  8989,
  87654,
  87656,
  87676,
  87678,
  87876,
  87878,
  87898,
  9,
  98,
  987,
  989,
  9876,
  9878,
  9898
];

quickSort(nums)
while(nums.length) {
  console.log(nums.splice(0, 10));
}
